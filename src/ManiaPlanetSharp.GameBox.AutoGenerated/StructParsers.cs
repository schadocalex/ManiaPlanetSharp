using System;
using System.Collections.Generic;
using ManiaPlanetSharp.GameBox.Parsing.Chunks;

namespace ManiaPlanetSharp.GameBox.Parsing.ParserGeneration.AutoGenerated
{
	public static partial class AutoGeneratedParsers
	{
		public static Dictionary<Type, IParser<object>> StructParsers { get; } = new Dictionary<Type, IParser<object>> {
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.GameBoxFile), new GameBoxFileParser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.HeaderEntry), new HeaderEntryParser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.ReferenceTableFolder), new ReferenceTableFolderParser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.Checkpoint), new CheckpointParser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.Block), new BlockParser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct1), new VisualModelStruct1Parser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct2), new VisualModelStruct2Parser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct3), new VisualModelStruct3Parser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct4), new VisualModelStruct4Parser() },
		};
	}



	public class GameBoxFileParser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.GameBoxFile>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.GameBoxFile Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.GameBoxFile();
			result.MagicString = new System.Char[3];
			for (int i = 0; i < result.MagicString.Length; i++)
			{
			    result.MagicString[i] = reader.ReadChar();
			}
			result.Version = reader.ReadUInt16();
			if (result.Version >= 3)
			{
			    result.FileFormatC = reader.ReadChar();
			}
			if (result.Version >= 3)
			{
			    result.ReferenceTableCompressedC = reader.ReadChar();
			}
			if (result.Version >= 3)
			{
			    result.BodyCompressedC = reader.ReadChar();
			}
			if (result.Version >= 4)
			{
			    result.Unused = reader.ReadChar();
			}
			if (result.Version >= 3)
			{
			    result.MainClassID = reader.ReadUInt32();
			}
			if (result.Version >= 6)
			{
			    result.UserDataSize = reader.ReadUInt32();
			}
			if (result.Version >= 6)
			{
			    result.HeaderChunkCount = reader.ReadUInt32();
			}
			if (result.HeaderChunkCount > 0)
			{
			    result.HeaderChunkEntries = result.ParseHeaderChunkEntries(reader);
			}
			if (result.HeaderChunkCount > 0)
			{
			    result.HeaderChunks = result.ParseHeaderChunks(reader);
			}
			if (result.Version >= 6)
			{
			    result.NodeCount = reader.ReadUInt32();
			}
			result.ReferenceTableExternalNodeCount = reader.ReadUInt32();
			if (result.ReferenceTableExternalNodeCount > 0)
			{
			    result.ReferenceTableAncestorLevel = reader.ReadUInt32();
			}
			if (result.ReferenceTableExternalNodeCount > 0)
			{
			    result.ReferenceTableFolders = new ManiaPlanetSharp.GameBox.Parsing.ReferenceTableFolder[reader.ReadUInt32()];
			    for (int i = 0; i < result.ReferenceTableFolders.Length; i++)
			    {
			        result.ReferenceTableFolders[i] = ParserFactory.GetCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.ReferenceTableFolder>().Parse(reader);
			    }
			}
			if (result.ReferenceTableExternalNodeCount > 0)
			{
			    result.ReferenceTableExternalNodes = new ManiaPlanetSharp.GameBox.Parsing.ReferenceTableExternalNode[(uint)result.ReferenceTableExternalNodeCount];
			    for (int i = 0; i < result.ReferenceTableExternalNodes.Length; i++)
			    {
			        result.ReferenceTableExternalNodes[i] = result.ParseReferenceTableExternalNode(reader);
			    }
			}
			if (result.BodyCompressed)
			{
			    result.UncompressedBodySize = reader.ReadUInt32();
			}
			if (result.BodyCompressed)
			{
			    result.CompressedBodySize = reader.ReadUInt32();
			}
			result.RawBodyData = result.ReadBodyData(reader);
			return result;
        }
	}

	public class HeaderEntryParser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.HeaderEntry>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.HeaderEntry Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.HeaderEntry();
			result.ChunkID = reader.ReadUInt32();
			result.ChunkSizeU = reader.ReadUInt32();
			return result;
        }
	}

	public class ReferenceTableFolderParser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.ReferenceTableFolder>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.ReferenceTableFolder Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.ReferenceTableFolder();
			result.Name = reader.ReadString();
			result.SubFolders = new ManiaPlanetSharp.GameBox.Parsing.ReferenceTableFolder[reader.ReadUInt32()];
			for (int i = 0; i < result.SubFolders.Length; i++)
			{
			    result.SubFolders[i] = ParserFactory.GetCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.ReferenceTableFolder>().Parse(reader);
			}
			return result;
        }
	}

	public class CheckpointParser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.Checkpoint>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.Checkpoint Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.Chunks.Checkpoint();
			result.Value1 = reader.ReadUInt32();
			result.Value2 = reader.ReadUInt32();
			result.Value3 = reader.ReadUInt32();
			return result;
        }
	}

	public class BlockParser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.Block>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.Block Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.Chunks.Block();
			result.Name = reader.ReadLookbackString();
			result.Rotation = reader.ReadByte();
			result.X = reader.ReadByte();
			result.Y = reader.ReadByte();
			result.Z = reader.ReadByte();
			result.FlagsU = reader.ReadUInt32();
			if (result.Flags.HasFlag(ManiaPlanetSharp.GameBox.Parsing.Chunks.BlockFlags.CustomBlock))
			{
			    result.Author = reader.ReadString();
			}
			if (result.Flags.HasFlag(ManiaPlanetSharp.GameBox.Parsing.Chunks.BlockFlags.CustomBlock))
			{
			    result.Skin = reader.ReadNode();
			}
			if (result.Flags.HasFlag(ManiaPlanetSharp.GameBox.Parsing.Chunks.BlockFlags.HasBlockParameters))
			{
			    result.BlockParameters = reader.ReadNode();
			}
			return result;
        }
	}

	public class VisualModelStruct1Parser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct1>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct1 Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct1();
			result.Version = reader.ReadInt32();
			result.Unknown1 = reader.ReadInt32();
			result.Unknown2 = reader.ReadInt32();
			result.Unknown3 = reader.ReadFloat();
			if (result.Version >= 1)
			{
			    result.Unknown4 = reader.ReadInt32();
			}
			if (result.Version >= 2)
			{
			    result.Unknown5 = reader.ReadInt32();
			}
			if (result.Version >= 2)
			{
			    result.Unknown6 = reader.ReadInt32();
			}
			return result;
        }
	}

	public class VisualModelStruct2Parser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct2>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct2 Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct2();
			result.Unknown1 = reader.ReadInt32();
			result.Unknown2 = new System.Single[7];
			for (int i = 0; i < result.Unknown2.Length; i++)
			{
			    result.Unknown2[i] = reader.ReadFloat();
			}
			return result;
        }
	}

	public class VisualModelStruct3Parser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct3>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct3 Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct3();
			result.Unknown1 = reader.ReadString();
			if (result.Unknown1 == null)
			{
			    result.Unknown2 = reader.ReadNodeReference();
			}
			return result;
        }
	}

	public class VisualModelStruct4Parser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct4>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct4 Parse(GameBoxReader reader)
        {
			var result = new ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct4();
			result.Unknown1 = reader.ReadFloat();
			result.Unknown2 = reader.ReadFloat();
			result.Unknown3 = reader.ReadFloat();
			result.Unknown4 = reader.ReadBool();
			result.Unknown5 = reader.ReadFloat();
			return result;
        }
	}
}
