using System;
using System.Collections.Generic;
using ManiaPlanetSharp.GameBox.Parsing.Chunks;

namespace ManiaPlanetSharp.GameBox.Parsing.ParserGeneration.AutoGenerated
{
	public static partial class AutoGeneratedParsers
	{
		public static Dictionary<Type, IParser<object>> StructParsers { get; } = new Dictionary<Type, IParser<object>> {
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.Checkpoint), new CheckpointParser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.Block), new BlockParser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct1), new VisualModelStruct1Parser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct2), new VisualModelStruct2Parser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct3), new VisualModelStruct3Parser() },
			{ typeof(ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct4), new VisualModelStruct4Parser() },
		};
	}



	public class CheckpointParser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.Checkpoint>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.Checkpoint Parse(GameBoxReader reader)
        {
			var result = new Checkpoint();
			result.Value1 = reader.ReadUInt32();
			result.Value2 = reader.ReadUInt32();
			result.Value3 = reader.ReadUInt32();
			return result;
        }
	}

	public class BlockParser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.Block>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.Block Parse(GameBoxReader reader)
        {
			var result = new Block();
			result.Name = reader.ReadLookbackString();
			result.Rotation = reader.ReadByte();
			result.X = reader.ReadByte();
			result.Y = reader.ReadByte();
			result.Z = reader.ReadByte();
			result.FlagsU = reader.ReadUInt32();
			if (result.Flags.HasFlag((Enum)((BlockFlags)BlockFlags.CustomBlock)))
			{
			    result.Author = reader.ReadString();
			}
			if (result.Flags.HasFlag((Enum)((BlockFlags)BlockFlags.CustomBlock)))
			{
			    result.Skin = reader.ReadNode();
			}
			if (result.Flags.HasFlag((Enum)((BlockFlags)BlockFlags.HasBlockParameters)))
			{
			    result.BlockParameters = reader.ReadNode();
			}
			return result;
        }
	}

	public class VisualModelStruct1Parser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct1>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct1 Parse(GameBoxReader reader)
        {
			var result = new VisualModelStruct1();
			result.Version = reader.ReadInt32();
			result.Unknown1 = reader.ReadInt32();
			result.Unknown2 = reader.ReadInt32();
			result.Unknown3 = reader.ReadFloat();
			if (result.Version >= ((int)1))
			{
			    result.Unknown4 = reader.ReadInt32();
			}
			if (result.Version >= ((int)2))
			{
			    result.Unknown5 = reader.ReadInt32();
			}
			if (result.Version >= ((int)2))
			{
			    result.Unknown6 = reader.ReadInt32();
			}
			return result;
        }
	}

	public class VisualModelStruct2Parser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct2>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct2 Parse(GameBoxReader reader)
        {
			var result = new VisualModelStruct2();
			result.Unknown1 = reader.ReadInt32();
			result.Unknown2 = new float[(int)((uint)7)];
			var iUnknown2 = 0;
			while (true)
			{
			    if (iUnknown2 < ((uint)7))
			    {
			        result.Unknown2[(int)iUnknown2] = reader.ReadFloat();
			        ++iUnknown2;
			    }
			    else
			    {
			        break;
			    }
			}
			return result;
        }
	}

	public class VisualModelStruct3Parser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct3>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct3 Parse(GameBoxReader reader)
        {
			var result = new VisualModelStruct3();
			result.Unknown1 = reader.ReadString();
			if (result.Unknown1 == ((string)null))
			{
			    result.Unknown2 = reader.ReadNodeReference();
			}
			return result;
        }
	}

	public class VisualModelStruct4Parser
		: PregeneratedCustomStructParser<ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct4>
	{
        public override ManiaPlanetSharp.GameBox.Parsing.Chunks.VisualModelStruct4 Parse(GameBoxReader reader)
        {
			var result = new VisualModelStruct4();
			result.Unknown1 = reader.ReadFloat();
			result.Unknown2 = reader.ReadFloat();
			result.Unknown3 = reader.ReadFloat();
			result.Unknown4 = reader.ReadBool();
			result.Unknown5 = reader.ReadFloat();
			return result;
        }
	}
}
